image: docker:stable

workflow:
  rules:
    - if: $CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS && $CI_PIPELINE_SOURCE == "push"
      when: never
    - if: '$CI_PIPELINE_SOURCE =~ /merge_request_even|web/'
    - if: '$CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS'
      when: never
    - if: '$CI_COMMIT_BRANCH'

variables:
  # This will suppress any download for dependencies and plugins or upload messages which would clutter the console log.
  # `installAtEnd` and `deployAtEnd` are only effective with recent version of the corresponding plugins.
  MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true"

services:
  - docker:20.10-dind

before_script:
  - df
  - cat /etc/resolv.conf
  - cat /etc/hosts

stages:
  - test
  - build
  - deploy:dev

build:maven:
  image: maven:3.8-openjdk-11
  stage: build
  script: "mvn clean install -B"
  artifacts:
    paths:
      - target/*.jar

build:image:
  stage: build
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker build -t registry.gitlab.com/ultra207/ultrasound-app .
    - docker push registry.gitlab.com/ultra207/ultrasound-app:latest

cache:
  key: $CI_JOB_NAME
  paths:
    - .m2/repository

test_variables:
  stage: test
  script:
    - echo "$CI_API_V4_URL $CI_PROJECT_ID"

deploy:dev:
  extends:
    - .deploy
    - .common:dev
  stage: deploy:dev
  script:
    - echo "Deploying to dev"

.deploy:
  dependencies:
    - build:maven
    - build:image

.common:dev:
  environment:
    name: dev
  variables:
    ENVIRONMENT: "dev"
  rules:
    - if: '$CI_COMMIT_REF_NAME =~ /develop|^FEAT.*$/i'
      when: manual
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: never
