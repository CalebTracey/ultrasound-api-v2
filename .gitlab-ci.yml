workflow:
 rules:
   - if: $CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS && $CI_PIPELINE_SOURCE == "push"
     when: never
   - if: '$CI_PIPELINE_SOURCE =~ /merge_request_even|web/'
   - if: '$CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS'
     when: never
   - if: '$CI_COMMIT_BRANCH'

variables:
  VERSION: v0.0.3
  DOCKER_DRIVER: overlay
  HEROKU_APP: ultrasound-api

stages:
  - test
  - push-image:prod
  - deploy:prod

test-build:
  stage: test
  image: 
    name: maven:3-jdk-11
    entrypoint: [ "" ]
  script: "mvn test"
  artifacts:
    paths:
      - $CI_PROJECT_DIR/target/surefire-reports/TEST-*.xml
    reports:
      junit:
        - $CI_PROJECT_DIR/target/surefire-reports/TEST-*.xml

push-image:prod:
  stage: push-image:prod
  extends:
    - .deploy
    - .heroku
    - .common:prod
  script:
    - docker build -f Dockerfile --iidfile imageid.txt -t registry.heroku.com/ultrasound-api .
    - docker login -u _ -p $HEROKU_TOKEN registry.heroku.com
    - docker push registry.heroku.com/ultrasound-api
    - apk add --no-cache curl
    - echo "Docker Image ID is $(cat imageid.txt)"
    - |-
      curl -X PATCH https://api.heroku.com/apps/ultrasound-api/web --header "Content-Type: application/json" --header "Accept: application/vnd.heroku+json; version=3.docker-releases" --header "Authorization: Bearer ${HEROKU_TOKEN}" --data '{ "updates": [ { "type": "web", "docker_image": "'$(cat imageid.txt)'" } ] }'
  rules:
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "main"'
      when: never
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: never
    - if: '$CI_COMMIT_REF_NAME =~ /main|^develop/i'
  dependencies:
    - test-build

release-image:prod:
  stage: deploy:prod
  extends:
    - .deploy
    - .heroku
    - .common:prod
  script:
    - heroku container:login
    - heroku container:release web -a $HEROKU_APP
  rules:
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "main"'
      when: never
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: never
    - if: '$CI_COMMIT_REF_NAME =~ /main|^develop/i'
  dependencies:
    - test-build
    - push-image:prod

.deploy:
  dependencies:
    - test

.heroku:
  image: docker:20
  services:
    - docker:20-dind

.common:prod:
  environment:
    name: prod
  variables:
    ENVIRONMENT: "prod"
    CONFIG_PATH: ./src/main/resources/application-prod.properties
  rules:
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "main"'
      when: never
    - if: '$CI_COMMIT_REF_NAME =~ /main|^develop/i'
      when: manual
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: never
