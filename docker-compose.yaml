
# === to rebuild containers ===
# docker-compose down
# docker-compose up -d --build --force-recreate


#version: "3.8"
#services:
#  frontend:
#    image: "frontend"
#    container_name: "frontend"
##    hostname: "frontend"
#    build:
#      context: src/main/react-client/
#      dockerfile: Dockerfile
#    ports:
#      - 80:80
#    depends_on:
#      - backend
#    networks:
#      - frontend
#      - mongo-network
#
#  backend:
#    image: "backend"
#    container_name: "backend"
##    hostname: "backend"
#    build:
#      context: ./
#      dockerfile: Dockerfile
#    ports:
#      - 8080:8080
#    depends_on:
#      - mongo
#    networks: # Networks to join (Services on the same network can communicate with each other using their name)
#      - backend
#      - frontend
#      - mongo-network
#  mongo:
#    image: "mongo"
#    container_name: "mongodb"
##    hostname: mongo
#    restart: unless-stopped
#    ports:
#      - 27017:27017
#    volumes:
#      #        - data:/data
#      - ./db-data/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
#      - ./db-data:/var/lib/mongo/data
#    environment:
#      - MONGO_INITDB_ROOT_USERNAME=rootuser
#      - MONGO_INITDB_ROOT_PASSWORD=rootpass
#    networks:
#      - mongo-network
#      - backend
#
#  mongo-express:
#      image: "mongo-express"
#      container_name: "mongo-express"
#      restart: unless-stopped
#      depends_on:
#        - mongo
#      ports:
#        - 8081:8081
#      environment:
#        - ME_CONFIG_MONGODB_ADMINUSERNAME=rootuser
#        - ME_CONFIG_MONGODB_ADMINPASSWORD=rootpass
#        - ME_CONFIG_MONGODB_SERVER=mongo
#      networks:
#        - mongo-network
#networks:
#  backend:
#  frontend:
#  mongo-network:
#
#    volumes:
#      data: []
#    networks:
#      default:
#        name: mongodb_network

#    mongo-express:
#      image: mongo-express
#      container_name: mongo-express
#      restart: always
#      ports:
#        - 8081:8081
#      environment:
#        - ME_CONFIG_MONGODB_ADMINUSERNAME=rootuser
#        - ME_CONFIG_MONGODB_ADMINPASSWORD=rootpass
#        - ME_CONFIG_MONGODB_SERVER=mongodb



version: "3.8"
services:
  mongodb:
    image: mongo
    container_name: mongodb-local
    ports:
      - 27017:27017
    volumes:
      - data:/data
    environment:
      - MONGO_INITDB_ROOT_USERNAME=rootuser
      - MONGO_INITDB_ROOT_PASSWORD=rootpass
  mongo-express:
    image: mongo-express
    container_name: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=rootuser
      - ME_CONFIG_MONGODB_ADMINPASSWORD=rootpass
      - ME_CONFIG_MONGODB_SERVER=mongodb
volumes:
  data: {}

networks:
  default:
    name: mongodb_network-local